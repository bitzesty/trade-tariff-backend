name: CI
on: [push, pull_request]
jobs:
  test:
    runs-on: ubuntu-latest
    services:
      db:
        image: postgres:10.11-alpine
        ports: ['5432:5432']
        env:
          POSTGRES_DB: tariff_test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 15s
          --health-retries 5
      redis:
        image: redis:4.0.10
        ports: ['6379:6379']
        options: --entrypoint redis-server
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"
      - name: Setup Ruby
        uses: actions/setup-ruby@v1
        with:
          ruby-version: 2.7.1
      - uses: nanasess/setup-chromedriver@master
      - name: Configure sysctl limits
        run: |
          sudo swapoff -a
          sudo sysctl -w vm.swappiness=1
          sudo sysctl -w fs.file-max=262144
          sudo sysctl -w vm.max_map_count=262144

      - name: Runs Elasticsearch
        uses: elastic/elastic-github-actions/elasticsearch@master
        with:
          stack-version: 6.4.2
      - name: Build and run tests
        env:
          BUNDLER_VERSION: 2.1.4
          DOCKER_TLS_CERTDIR: ""
          POSTGRES_DB: tariff_test
          DATABASE_URL: "postgresql://postgres:postgres@localhost:5432/tariff_test"
          REDIS_URL: redis://localhost:6379
          ES_JAVA_OPTS: "-Xms1g -Xmx1g"
          ELASTICSEARCH_URL: 'http://localhost:9200'
        run: |
          sudo apt-get update -qy
          sudo apt-get install -y build-essential rake postgresql postgresql-client libpq-dev xvfb unzip libcurl4 libcurl3-gnutls libcurl4-openssl-dev
          gem install bundler --version "<= $BUNDLER_VERSION"
          bundle install --jobs 4 --retry 3 --path vendor/bundle
          RAILS_ENV=test bundle exec rake db:structure:load --trace
          curl "http://localhost:9200/_cat/health"
          RAILS_ENV=test RAILS_DISABLE_TEST_LOG=true bundle exec rspec spec/ --tag '~skip_ci' --profile 10 --format RspecJunitFormatter --out rspec.xml --format progress
  deploy_dev:
    needs: [test]
    if: github.ref == 'refs/heads/master_notyet'
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 1
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-
      - name: Setup Ruby
        uses: actions/setup-ruby@v1
        with:
          ruby-version: 2.5.8
      - uses: actions/setup-node@v2-beta
        with:
          node-version: '12'
      - name: "Deploy dev"
        env:
          CF_ENDPOINT: "api.london.cloud.service.gov.uk"
          CF_SPACE: development
          CF_APP: "tariff-backend-dev"
          CF_APP_WORKER: "tariff-backend-worker-dev"
          CF_USER: ${{ secrets.CF_USER }}
          CF_PASSWORD: ${{ secrets.CF_PASSWORD }}
          CF_ORG: ${{ secrets.CF_ORG }}
          SLACK_CHANNEL: ${{ secrets.SLACK_CHANNEL }}
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          HEALTHCHECK_URL: ${{ secrets.HEALTHCHECK_URL }}
        run: |
          curl -v -L -o cf-cli_amd64.deb 'https://cli.run.pivotal.io/stable?release=debian64&source=github'
          sudo dpkg -i cf-cli_amd64.deb
          cf -v
          cf add-plugin-repo CF-Community https://plugins.cloudfoundry.org
          cf install-plugin blue-green-deploy -r CF-Community -f
          cf install-plugin app-autoscaler-plugin -r CF-Community -f
          ./bin/deploy
  deploy_staging:
    needs: [test]
    if: github.ref == 'refs/heads/staging_notyet'
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 1
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-
      - name: Setup Ruby
        uses: actions/setup-ruby@v1
        with:
          ruby-version: 2.5.8
      - uses: actions/setup-node@v2-beta
        with:
          node-version: '12'
      - name: "Deploy staging"
        env:
          CF_ENDPOINT: "api.london.cloud.service.gov.uk"
          CF_SPACE: staging
          CF_APP: "tariff-backend-staging"
          CF_APP_WORKER: "tariff-backend-worker-staging"
          CF_USER: ${{ secrets.CF_USER }}
          CF_PASSWORD: ${{ secrets.CF_PASSWORD }}
          CF_ORG: ${{ secrets.CF_ORG }}
          SLACK_CHANNEL: ${{ secrets.SLACK_CHANNEL }}
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          HEALTHCHECK_URL: ${{ secrets.HEALTHCHECK_URL }}
        run: |
          curl -v -L -o cf-cli_amd64.deb 'https://cli.run.pivotal.io/stable?release=debian64&source=github'
          sudo dpkg -i cf-cli_amd64.deb
          cf -v
          cf add-plugin-repo CF-Community https://plugins.cloudfoundry.org
          cf install-plugin blue-green-deploy -r CF-Community -f
          cf install-plugin app-autoscaler-plugin -r CF-Community -f
          ./bin/deploy