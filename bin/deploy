#!/usr/bin/env bash
set -e

# Fetch deployed revision
export GIT_OLD_REVISION=`curl "https://$CF_APP.$HEALTHCHECK_URL" | grep -o -w -E '[[:alnum:]]{7}'`
# Log the new revision
export GIT_REVISION=`git rev-parse --short HEAD`
echo $GIT_REVISION > REVISION

export GIT_MESSAGE=`git log --oneline $GIT_OLD_REVISION..$GIT_REVISION`

# Check CF connectivity
cf login -a api.cloud.service.gov.uk -u $CF_USER -p "$CF_PASSWORD" -o $CF_ORG -s $CF_SPACE
cf a

# Notify Slack deployment started
curl -X POST \
--data-urlencode 'payload={"text": "'"Deploying $CF_APP.\n${GIT_MESSAGE}"'", "channel": "'"#$SLACK_CHANNEL"'", "username": "cf-deploy", "icon_emoji": ":cloud:", "fields": [{"title": "ENV", "value": "'"$CF_SPACE"'", "short": true}, {"title": "SHA1", "value": "'"<https://github.com/bitzesty/trade-tariff-backend/compare/$GIT_OLD_REVISION...$GIT_REVISION|$GIT_REVISION>"'", "short": true}]}' \
$SLACK_WEBHOOK

# Fetch manifest
cf create-app-manifest $CF_APP
cf create-app-manifest $CF_APP_WORKER

# Database migrations
cf push "$CF_APP"-migrations -f "$CF_APP_WORKER"_manifest.yml -c "rake db:migrate" -i 1

# Deploy Worker
cf push $CF_APP_WORKER -f "$CF_APP_WORKER"_manifest.yml

# Deploy App
cf zero-downtime-push $CF_APP -f "$CF_APP"_manifest.yml

# Notify Slack deployment finished
curl -X POST \
--data-urlencode 'payload={"text": "'"Deployment finished for $CF_APP"'", "channel": "'"#$SLACK_CHANNEL"'", "username": "cf-deploy", "icon_emoji": ":cloud:", "fields": [{"title": "ENV", "value": "'"$CF_SPACE"'", "short": true}, {"title": "SHA1", "value": "'"<https://github.com/bitzesty/trade-tariff-backend/compare/$GIT_OLD_REVISION...$GIT_REVISION|$GIT_REVISION>"'", "short": true}]}' \
$SLACK_WEBHOOK

# Notify GDS about new releases
curl -X POST -H 'Content-type: application/json' \
-H 'Authorization: Bearer '"$GDS_TOKEN"'' \
-H 'Accept: application/json' \
--data '{"repo": "'"$CIRCLE_REPOSITORY_URL"'", "deployment[version]": "'"$CIRCLE_SHA1"'", "deployment[environment]": "'"$CF_SPACE"'"}' \
$GDS_WEBHOOK
