#!/usr/bin/env bash

[[ "$TRACE" ]] && set -o xtrace
set -o errexit
set -o nounset
set -o pipefail
set -o noclobber

cf login -a "$CF_ENDPOINT" -u "$CF_USER" -p "$CF_PASSWORD" -o "$CF_ORG" -s "$CF_SPACE"

export GIT_OLD_REVISION=$(cf ssh $CF_APP_API_NAME -c 'cat app/REVISION')
export GIT_NEW_REVISION=$(git rev-parse --short HEAD)
export CF_APP_WORKER_NAME=$(echo $CF_APP_API_NAME | sed 's/backend/backend-worker/')
export CF_BUILDPACK="https://github.com/cloudfoundry/ruby-buildpack.git#v1.8.24"

echo "$GIT_NEW_REVISION" >REVISION

# Replace the buildpack of the current api with the build pack specified above
cat <<HERE >update_buildpack_key.rb
require 'yaml'

app_manifest = YAML.load(STDIN)

app_manifest["applications"].map do |application|
  application["buildpack"] = "$CF_BUILDPACK"
  application.delete("buildpacks")
end

puts YAML.dump(app_manifest)
HERE

function notify() {
  curl -X POST \
    --data-urlencode 'payload={"text": "'"$1"'", "channel": "'"#$SLACK_CHANNEL"'", "username": "cf-deploy", "icon_emoji": ":rocket:", "fields": [{"title": "ENV", "value": "'"$CF_SPACE"'", "short": true}, {"title": "SHA1", "value": "'"<https://github.com/bitzesty/trade-tariff-backend/compare/$GIT_OLD_REVISION...$GIT_NEW_REVISION|$GIT_NEW_REVISION>"'", "short": true}]}' \
    "$SLACK_WEBHOOK"
}

function sentry_release() {
  curl -sL https://sentry.io/get-cli/ | bash
  VERSION=$(sentry-cli releases propose-version)
  sentry-cli releases new -p tariff-backend $VERSION
  sentry-cli releases set-commits --auto $VERSION
}

function deploy_worker() {
  local APP_WORKER=$1

  # Fetch existing manifest
  cf create-app-manifest "$APP_WORKER"

  # Stage manifest
  cf push "$APP_WORKER" -f "$APP_WORKER"_manifest.yml -b "$CF_BUILDPACK"

  cf run-task "$APP_WORKER" --command "rake db:migrate" --name "db-migrate"
  cf run-task "$APP_WORKER" --command "rake db:data:migrate" --name "db-data-migrate"
}

function deploy_api() {
  local APP_API=$1

  # Fetch existing manifest
  cf create-app-manifest $APP_API

  # Patch downloaded manifest with specified buildpack
  ruby update_buildpack_key.rb <"$APP_API"_manifest.yml >"$APP_API"_patched_manifest.yml

  # Deploy patched manifest
  cf blue-green-deploy "$APP_API" -f "$APP_API"_patched_manifest.yml --delete-old-apps

  # Attach precreated autoscaling policy
  cf attach-autoscaling-policy "$APP_API" config/autoscaling/"$CF_SPACE"-policy.json

  # Enable routing from the public applications to this backend application
  cf add-network-policy "$CF_APP_FRONTEND" "$APP_API" --protocol tcp --port 8080
  cf add-network-policy "$CF_APP_ADMIN" "$APP_API" --protocol tcp --port 8080
}

deploy_worker
notify "Deploying tariff backend service $CF_APP_API_NAME.\n${GIT_NEW_REVISION}"

deploy_worker "$CF_APP_WORKER_NAME"
deploy_api "$CF_APP_API_NAME"

notify "Deployment finished for $CF_APP_API_NAME"
